from flask import Flask, request
import requests
import os
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")

def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": text}
    response = requests.post(url, data=payload)
    if not response.ok:
        print("‚ùå –û—à–∏–±–∫–∞ Telegram:", response.text)

@app.route('/webhook', methods=['POST'])
def webhook():
    auth_header = request.headers.get('Authorization')
    if auth_header != f'Bearer {WEBHOOK_SECRET}':
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization:", auth_header)
        return 'Forbidden', 403

    try:
        data = request.get_json(force=True)
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Helius:", data)

        txs = data if isinstance(data, list) else data.get("transactions", [])
        for tx in txs:
            signature = tx.get("signature", "–Ω–µ—Ç —Å–∏–≥–Ω–∞—Ç—É—Ä—ã")
            tx_type = tx.get("type", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø")
            description = tx.get("description", "-")
            source = tx.get("source", "-")

            msg = (
                f"üì• –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:\n"
                f"‚Üí –¢–∏–ø: {tx_type}\n"
                f"‚Üí Signature: {signature}\n"
                f"‚Üí Source: {source}\n"
                f"‚Üí –û–ø–∏—Å–∞–Ω–∏–µ: {description}"
            )
            send_telegram_message(msg)

        return '', 200

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:", str(e))
        return 'Internal Server Error', 500

if __name__ == '__main__':
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)